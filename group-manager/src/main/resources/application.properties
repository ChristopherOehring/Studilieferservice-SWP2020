server.port= 8010

#spring.datasource.url= jdbc:h2:mem:group-manager;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.platform= h2
#spring.datasource.username= sa
#spring.datasource.password=
#spring.datasource.driver-class-name= org.h2.Driver
#
#spring.jpa.database-platform= org.hibernate.dialect.H2Dialect
#
#spring.h2.console.enabled= true
#spring.h2.console.path= /console
#spring.h2.console.settings.trace= false
#spring.h2.console.settings.web-allow-others= false

spring.jpa.database=POSTGRESQL
spring.datasource.url=jdbc:postgresql://db:5432/group-manager
spring.datasource.username=postgres

spring.datasource.password=password
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
#The database is temporary for now:
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true



spring.thymeleaf.mode= HTML
spring.thymeleaf.cache= true

spring.kafka.bootstrap-servers= localhost:5000

spring.kafka.consumer.enable-auto-commit= false
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset= earliest

spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks= "all"
spring.kafka.listener.ack-mode= manual
